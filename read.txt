/**
 * Definition for singly-linked list with a random pointer.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
class Solution {
public:
    RandomListNode *copyRandomList(RandomListNode *head) {
        if(head == NULL) return NULL;
        //first
        RandomListNode * temp = head;
        while(temp)
        {
            RandomListNode * p = new RandomListNode(head->label);
            p->next=temp->next;
            temp->next=p;
            temp=p->next;
            p=NULL;
        }
        RandomListNode * newHead = head->next;
        //second
        temp=head;
        while(temp)
        {
            temp->next->random=(temp->random?temp->random->next:NULL);
            temp=temp->next->next;
        }
        //third
       RandomListNode * p = newHead;
        temp=head;
        while(temp)
        {
            temp->next=p->next;
            temp=temp->next;
            p->next=(temp?temp->next:NULL);
            p=p->next;
        }
        return newHead;
    }
};